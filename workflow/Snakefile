# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.

import os
import subprocess
import glob
import pandas as pd
from snakemake.utils import validate
import pathlib
import warnings

# configure shell behavior for all rules
shell.executable("/bin/bash")
shell.prefix("set -euo pipefail;")

# Inserting some external libraries
sys.path.append(".")
from lib import pattern_conversions as pc
from lib import target_construction

# record commit-ish ID
label = subprocess.check_output(["git", "describe", "--always"]).strip()
print(f"54gene phasing workflow {label}")

# create log dir
pathlib.Path("logs/").mkdir(parents=True, exist_ok=True)


# reference the config file and validate
configfile: "config/config.yaml"


CHROM = [f"chr{x}" for x in range(1, 23)] + ["chrX"]

validate(config, schema="../schema/global.config.schema.yaml")
manifest = pd.read_csv(config["manifest"], sep="\s+")

# def check_sample_order(wildcards):
# samples = []
# for c in manifest.vcf_files:
# filename = checkpoints.list_samples.get(vcf_file=c).output[0]
# samples.append(np.loadtxt(filename, dtype=str))
# if len(samples) == 1:
# return manifest.vcf_files
# elif len(samples) > 1:
# for i in range(1,len(samples)):
# if samples[0].size != samples[1].size:
# raise ValueError("Each VCF file must contain the same number of samples!")
# if ~np.all(samples[0] == samples[1]):
# raise ValueError("All VCF files must have the same samples order!")
# return manifest.vcf_files


def create_full_targets(wildcards):
    """Create the full set of targets."""
    filename = checkpoints.list_chromosomes.get(outfix=config["outfix"]).output[0]
    chroms = []
    with open(filename, "r") as f:
        for line in f:
            chroms.append(line.rstrip())
    chroms = [x for x in chroms if x != ""]
    targets = target_construction.construct_phasing_targets(config, chroms)
    return targets


localrules:
    all,


rule all:
    input:
        create_full_targets,


# including individual rules
include: "rules/common.smk"
include: "rules/shapeit4.smk"
include: "rules/eagle.smk"
